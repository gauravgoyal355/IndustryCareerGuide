import React, { useState, useEffect } from 'react';\nimport { useRouter } from 'next/router';\nimport Layout from '../../components/Layout';\nimport quizData from '../../data/career_assessment_quiz.json';\n\nconst QuizPage = () => {\n  const router = useRouter();\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [answers, setAnswers] = useState([]);\n  const [selectedAnswer, setSelectedAnswer] = useState(null);\n  const [isCompleted, setIsCompleted] = useState(false);\n  const [progress, setProgress] = useState(0);\n\n  const questions = quizData.questions;\n  const totalQuestions = questions.length;\n\n  useEffect(() => {\n    setProgress(((currentQuestion) / totalQuestions) * 100);\n  }, [currentQuestion, totalQuestions]);\n\n  const handleAnswerSelect = (answerIndex) => {\n    setSelectedAnswer(answerIndex);\n  };\n\n  const handleNext = () => {\n    if (selectedAnswer === null) return;\n\n    const newAnswers = [...answers];\n    newAnswers[currentQuestion] = selectedAnswer;\n    setAnswers(newAnswers);\n\n    if (currentQuestion < totalQuestions - 1) {\n      setCurrentQuestion(currentQuestion + 1);\n      setSelectedAnswer(newAnswers[currentQuestion + 1] || null);\n    } else {\n      // Quiz completed\n      setIsCompleted(true);\n      // Store answers in sessionStorage for results page\n      sessionStorage.setItem('quizAnswers', JSON.stringify(newAnswers));\n      // Redirect to results\n      router.push('/results/');\n    }\n  };\n\n  const handlePrevious = () => {\n    if (currentQuestion > 0) {\n      setCurrentQuestion(currentQuestion - 1);\n      setSelectedAnswer(answers[currentQuestion - 1] || null);\n    }\n  };\n\n  const getDimensionColor = (dimension) => {\n    const colors = {\n      'Skills': 'bg-blue-100 text-blue-800',\n      'Values': 'bg-green-100 text-green-800',\n      'Temperament': 'bg-purple-100 text-purple-800',\n      'Ambitions': 'bg-orange-100 text-orange-800'\n    };\n    return colors[dimension] || 'bg-gray-100 text-gray-800';\n  };\n\n  if (isCompleted) {\n    return (\n      <Layout \n        title=\"Quiz Completed - IndustryCareerGuide\"\n        description=\"Your career assessment is complete. View your personalized results.\"\n      >\n        <div className=\"section-padding bg-primary-50\">\n          <div className=\"container-max max-w-2xl text-center\">\n            <div className=\"animate-fade-in\">\n              <div className=\"w-20 h-20 bg-green-500 text-white rounded-full flex items-center justify-center text-3xl mx-auto mb-6\">\n                ‚úì\n              </div>\n              <h1 className=\"text-3xl font-bold text-gray-900 mb-4\">Assessment Complete!</h1>\n              <p className=\"text-lg text-gray-600 mb-8\">\n                Thank you for completing the career assessment. We're analyzing your responses to provide personalized recommendations.\n              </p>\n              <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-primary-600 mx-auto\"></div>\n            </div>\n          </div>\n        </div>\n      </Layout>\n    );\n  }\n\n  const currentQ = questions[currentQuestion];\n\n  return (\n    <Layout \n      title={`Career Assessment - Question ${currentQuestion + 1} of ${totalQuestions}`}\n      description=\"Complete our comprehensive career assessment to discover your ideal industry career path.\"\n      canonicalUrl=\"/quiz/\"\n    >\n      <div className=\"min-h-screen bg-gray-50\">\n        {/* Progress Bar */}\n        <div className=\"bg-white border-b\">\n          <div className=\"container-max\">\n            <div className=\"py-4\">\n              <div className=\"flex items-center justify-between mb-2\">\n                <span className=\"text-sm font-medium text-gray-600\">\n                  Question {currentQuestion + 1} of {totalQuestions}\n                </span>\n                <span className=\"text-sm font-medium text-gray-600\">\n                  {Math.round(progress)}% Complete\n                </span>\n              </div>\n              <div className=\"w-full bg-gray-200 rounded-full h-2\">\n                <div \n                  className=\"bg-primary-600 h-2 rounded-full transition-all duration-300 ease-out\"\n                  style={{ width: `${progress}%` }}\n                ></div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/* Question Content */}\n        <div className=\"section-padding\">\n          <div className=\"container-max max-w-4xl\">\n            <div className=\"bg-white rounded-lg shadow-lg p-8\">\n              {/* Question Header */}\n              <div className=\"mb-8\">\n                <div className=\"flex items-center gap-3 mb-4\">\n                  <span className={`px-3 py-1 rounded-full text-sm font-medium ${getDimensionColor(currentQ.dimension)}`}>\n                    {currentQ.dimension}\n                  </span>\n                  {currentQ.subdimension && (\n                    <span className=\"text-sm text-gray-500\">\n                      ‚Ä¢ {currentQ.subdimension}\n                    </span>\n                  )}\n                </div>\n                <h1 className=\"text-2xl md:text-3xl font-bold text-gray-900 mb-4\">\n                  {currentQ.question}\n                </h1>\n                <p className=\"text-gray-600\">\n                  {currentQ.description}\n                </p>\n              </div>\n\n              {/* Answer Choices */}\n              <div className=\"space-y-4 mb-8\">\n                {currentQ.choices.map((choice, index) => (\n                  <button\n                    key={index}\n                    onClick={() => handleAnswerSelect(index)}\n                    className={`w-full text-left p-4 rounded-lg border-2 transition-all duration-200 ${\n                      selectedAnswer === index\n                        ? 'border-primary-500 bg-primary-50 shadow-md'\n                        : 'border-gray-200 hover:border-gray-300 hover:bg-gray-50'\n                    }`}\n                  >\n                    <div className=\"flex items-center\">\n                      <div className={`w-5 h-5 rounded-full border-2 mr-4 flex items-center justify-center ${\n                        selectedAnswer === index\n                          ? 'border-primary-500 bg-primary-500'\n                          : 'border-gray-300'\n                      }`}>\n                        {selectedAnswer === index && (\n                          <div className=\"w-2 h-2 rounded-full bg-white\"></div>\n                        )}\n                      </div>\n                      <span className=\"text-gray-800 font-medium\">\n                        {choice.text}\n                      </span>\n                    </div>\n                  </button>\n                ))}\n              </div>\n\n              {/* Navigation Buttons */}\n              <div className=\"flex justify-between items-center\">\n                <button\n                  onClick={handlePrevious}\n                  disabled={currentQuestion === 0}\n                  className=\"btn-secondary disabled:opacity-50 disabled:cursor-not-allowed\"\n                >\n                  ‚Üê Previous\n                </button>\n                \n                <div className=\"text-sm text-gray-500\">\n                  {currentQuestion + 1} / {totalQuestions}\n                </div>\n                \n                <button\n                  onClick={handleNext}\n                  disabled={selectedAnswer === null}\n                  className=\"btn-primary disabled:opacity-50 disabled:cursor-not-allowed\"\n                >\n                  {currentQuestion === totalQuestions - 1 ? 'Complete Assessment' : 'Next ‚Üí'}\n                </button>\n              </div>\n            </div>\n\n            {/* Help Text */}\n            <div className=\"mt-8 text-center\">\n              <p className=\"text-sm text-gray-500\">\n                üí° Choose the answer that best reflects your preferences and working style. \n                There are no right or wrong answers.\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </Layout>\n  );\n};\n\nexport default QuizPage;